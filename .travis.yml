# 2016 November 4
# https://github.com/bevry/base

# Use the latest travis infrastructure
sudo: false

# We use node
language: node_js
node_js:
  - "0.8"   # legacy
  - "0.10"  # maintenance
  - "0.12"  # maintenance
  - "4"     # lts
  - "6"     # lts
  - "7"     # stable
cache:
  directories:
    - node_modules

# Ensure npm is up to date and that dependencies are installed using an LTS node version
install: >
  export CURRENT_NPM_VERSION="$(npm --version)"
  export LATEST_NPM_VERSION="$(npm view npm version)"
  if test "$CURRENT_NPM_VERSION" != "$LATEST_NPM_VERSION"; then
    npm instal npm --global --cache-min=Infinity
  fi

  export LTS_NODE_VERSIONS="$(nvm ls-remote --lts)"
  echo "TRAVIS_NODE_VERSION = $TRAVIS_NODE_VERSION"
  echo "CURRENT_NODE_VERSION = $(node --version)"
  if echo "$LTS_NODE_VERSIONS" | grep "$TRAVIS_NODE_VERSION"; then
    echo "running on a LTS node version, completing setup"
    npm run our:setup
  else
    echo "running on a non-LTS node version, completing setup on a LTS node version"
    nvm install --lts
    export LTS_NODE_VERSION="$(node --version)"
    npm run our:setup
    nvm use "$TRAVIS_NODE_VERSION"
  fi

# Ensure compilation and linting occur on an LTS node version
before_script: >
  if test "$LTS_NODE_VERSION"; then
    echo "running on a non-LTS node version, compiling with LTS, skipping linting"
    nvm use "$LTS_NODE_VERSION"
    npm run our:compile
    nvm use "$TRAVIS_NODE_VERSION"
  else
    echo "running on a LTS node version, compiling and linting"
    npm run our:compile && npm run our:verify
  fi

# Custom notifications
notifications:
  slack:
    secure: lC4QRYOkn3wbuaKhn/IbW8gMP8E+bQrAopLII/37N88TGTjAKKNCL2Rte/Z5BXiSwNEZCWG8dGkUYAGrbSqCNA4Nr7VVeH5OMZs7x67fweUx+S+sP8u+iknvCVkmiDvjsswTBLixwOLVVv/4DyI06DFQtbX4pgT7IwA54M+Pjmw=
  email:
    recipients:
      secure: Nmek4QEFC+T5o1VP129nZZFiI6JKMrwYy/d6Ct/oFhPtGSZZ730M0q8anJc9lC1SKR0j7mKJWNwYPLDjx4eFSKs22ErmEC+R5F8qU+jzR9wSk8Dr6aQbHnVFpW3QJu6J8lqeNSPRTj2Fnq4mYohch5o5nJL/RoqEMNuYm8H/pSc=
